function [u,v,p,E] = ns_solver_2d(u, ...
    v, ...
    p, ...
    nx, ...
    ny, ...
    dx, ...
    dy, ...
    dt, ...
    rho, ...
    nu, ...
    pressure_bc_types, ...
    pressure_bc_values, ...
    u_bc_types, ...
    u_bc_values, ...
    v_bc_types, ...
    v_bc_values, ...
    delta)


residual = zeros(nx,ny);
u_new = zeros(nx,ny);
v_new = zeros(nx,ny);
p_new = zeros(nx,ny);

k = 1;
error = 1;

p = apply_bc(p, dx, dy, pressure_bc_types, pressure_bc_values);
u = apply_bc(u, dx, dy, u_bc_types, u_bc_values);
v = apply_bc(v, dx, dy, u_bc_types, u_bc_values);

while error > 1e-6
    for i = 2:nx-1
        for j = 2:ny-1
            u_new(j,i) = dt*(...
                -(p(j,i-1)-p(j,i+1))/(2*rho*dx) + ...
                nu*( (u(j,i+1)-2*u(j,i)+u(j,i-1))/dx^2 + ...
                (u(j+1,i)-2*u(j,i)+u(j-1,i))/dy^2 ) - ...
                u(j,i)*(u(j,i-1)-u(j,i+1))/(2*dx) - ...
                v(j,i)*(u(j-1,i)-u(j+1,i))/(2*dy)) + ...
                u(j,i);
        end
    end
    u = apply_bc(u_new, dx, dy, u_bc_types, u_bc_values);
    
    for i = 2:nx-1
        for j = 2:ny-1
            v_new(j,i) = dt*(...
                -(p(j-1,i)-p(j+1,i))/(2*rho*dy) + ...
                nu*( (v(j,i+1)-2*v(j,i)+v(j,i-1))/dx^2 + ...
                (v(j+1,i)-2*v(j,i)+v(j-1,i))/dy^2 ) - ...
                u(j,i)*(v(j,i-1)-v(j,i+1))/(2*dx) - ...
                v(j,i)*(v(j-1,i)-v(j+1,i))/(2*dy)) + ...
                v(j,i);
        end
    end
    v = apply_bc(v_new, dx, dy, v_bc_types, v_bc_values);
    
    for i = 2:nx-1
        for j = 2:ny-1
            residual(j,i) =  (u(j,i-1)-u(j,i+1))/(2*dx) + (v(j-1,i)-v(j+1,i))/(2*dy);            
            p_new(j,i) = p(j,i) - delta * dt * residual(j,i);
        end
    end
    p = apply_bc(p_new, dx, dy, pressure_bc_types, pressure_bc_values);
    
    % Continuity residual as error measure
    error = sum(sum(abs(residual)));
    E(k) = error;
    k = k + 1;
    
    if k > dt*1e10
        break
    end
end

end